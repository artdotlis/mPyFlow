from concurrent.futures.thread import ThreadPoolExecutor
from mpyflow.shared.container.data import InputData
from typing import Protocol


class IOInterface[IN](Protocol):

    def has_input(self) -> bool: ...

    def has_output(self) -> bool: ...

    def wr_on_close(self) -> None: ...

    def on_error(self) -> None: ...

    async def read(self, thread_pool: ThreadPoolExecutor, /) -> InputData[IN] | None: ...

    async def write(self, data: IN, thread_pool: ThreadPoolExecutor, /) -> bool: ...

    async def running(
        self, thread_pool: ThreadPoolExecutor, provider_cnt: int, /
    ) -> bool: ...
